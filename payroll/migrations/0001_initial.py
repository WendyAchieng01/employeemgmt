# Generated by Django 5.2.5 on 2025-10-25 02:02

import django.core.validators
import django.db.models.deletion
import payroll.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0014_remove_contract_benefits_remove_staff_kra_pin'),
    ]

    operations = [
        migrations.CreateModel(
            name='Deduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Deduction Name')),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Percentage Cut (%)')),
                ('description', models.TextField(verbose_name='Description')),
                ('deduction_type', models.CharField(choices=[('MANDATORY', 'Mandatory'), ('VOLUNTARY', 'Voluntary'), ('LOAN', 'Loan')], default='MANDATORY', max_length=20, verbose_name='Deduction Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('min_salary_threshold', models.DecimalField(decimal_places=2, default=0, help_text='Deduction only applies if salary is above this amount', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Minimum Salary Threshold')),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum amount to deduct (overrides percentage if set)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Maximum Deduction Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applies_to_contract_types', models.ManyToManyField(blank=True, related_name='applicable_deductions', to='core.contract', verbose_name='Applies to Contract Types')),
            ],
            options={
                'verbose_name': 'Deduction',
                'verbose_name_plural': 'Deductions',
                'ordering': ['name'],
                'unique_together': {('name', 'percentage')},
            },
        ),
        migrations.CreateModel(
            name='ContractDeduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Custom Percentage (%)')),
                ('fixed_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Fixed Amount (KSh)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deduction_overrides', to='core.contract')),
                ('deduction', models.ForeignKey(limit_choices_to={'deduction_type__in': ['VOLUNTARY', 'LOAN']}, on_delete=django.db.models.deletion.CASCADE, to='payroll.deduction')),
            ],
            options={
                'verbose_name': 'Contract Deduction Override',
                'verbose_name_plural': 'Contract Deduction Overrides',
                'unique_together': {('contract', 'deduction')},
            },
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pay_period_start', models.DateField(verbose_name='Pay Period Start')),
                ('pay_period_end', models.DateField(verbose_name='Pay Period End')),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Gross Salary')),
                ('total_deductions', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total Deductions')),
                ('net_salary', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Net Salary')),
                ('kra_pin', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z][0-9]{9}[A-Za-z]$', 'KRA PIN must be 11 characters: 1 letter, 9 digits, 1 letter')], verbose_name='KRA PIN')),
                ('bank_name', models.CharField(max_length=100, verbose_name='Bank Name')),
                ('bank_branch', models.CharField(max_length=100, verbose_name='Bank Branch')),
                ('bank_branch_code', models.CharField(max_length=20, verbose_name='Bank Branch Code')),
                ('account_no', models.CharField(max_length=20, verbose_name='Account Number')),
                ('generated_at', models.DateTimeField(auto_now_add=True, verbose_name='Generated At')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to=payroll.models.payslip_upload_path, verbose_name='Payslip PDF')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_contract', to='core.contract', verbose_name='Contract')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_identity', to='core.staff', verbose_name='Staff')),
            ],
            options={
                'verbose_name': 'Payroll',
                'verbose_name_plural': 'Payrolls',
                'ordering': ['-pay_period_end'],
                'unique_together': {('staff', 'pay_period_start', 'pay_period_end')},
            },
        ),
    ]
